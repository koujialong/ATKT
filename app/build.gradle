apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs.kotlin'
//apply plugin: 'io.fabric'


android {
    compileSdkVersion rootProject.complieSdkVersion
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.example.myapplication"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        manifestPlaceholders = [crashlyticsEnabled: true]

        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled true
            manifestPlaceholders = [crashlyticsEnabled: true]
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            versionNameSuffix = '-debug'
            manifestPlaceholders = [crashlyticsEnabled: true]
        }

        staging {
            initWith debug
            versionNameSuffix = '-staging'
            matchingFallbacks = ['debug']
        }
    }

    dataBinding {
        enabled true
    }

    signingConfigs {
        debug {
            storeFile file("../debug.keystore")
            keyAlias "androiddebugkey"
            keyPassword "android"
            storePassword "android"
        }
    }

    sourceSets {
        debug.java.srcDir 'src/debugRelease/java'
        release.java.srcDir 'src/debugRelease/java'
    }

    lintOptions {
        checkGeneratedSources = true
        checkReleaseBuilds false
    }

    testBuildType = "staging"

    //java 版本
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "androidx.core:core-ktx:$rootProject.coreVersion"

    //UI
    implementation "androidx.activity:activity-ktx:$rootProject.activityVersion"
    implementation "androidx.appcompat:appcompat:$rootProject.appcompatVersion"
    implementation "androidx.fragment:fragment-ktx:$rootProject.fragmentVersion"
    implementation "androidx.cardview:cardview:$rootProject.cardviewVersion"
    implementation "androidx.browser:browser:$rootProject.browserVersion"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.constraintLayoutVersion"
    implementation "androidx.drawerlayout:drawerlayout:$rootProject.drawerLayoutVersion"
    implementation "com.google.android.material:material:$rootProject.materialVersion"
    implementation "com.google.android:flexbox:$rootProject.flexboxVersion"
    implementation "com.airbnb.android:lottie:$rootProject.lottieVersion"
    implementation "com.pacioianu.david:ink-page-indicator:$rootProject.pageIndicatorVersion"

    // Architecture Components
    implementation "androidx.lifecycle:lifecycle-extensions:$rootProject.lifecycleVersion"
    kapt "androidx.lifecycle:lifecycle-compiler:$rootProject.lifecycleVersion"
    testImplementation "androidx.arch.core:core-testing:$rootProject.archTestingVersion"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"
    implementation "androidx.room:room-ktx:$rootProject.roomVersion"
    implementation "androidx.room:room-runtime:$rootProject.roomVersion"
    kapt "androidx.room:room-compiler:$rootProject.roomVersion"
    testImplementation "androidx.room:room-ktx:$rootProject.roomVersion"
    testImplementation "androidx.room:room-runtime:$rootProject.roomVersion"

    //Dagger
    implementation "com.google.dagger:dagger-android:$rootProject.dagger"
    implementation "com.google.dagger:dagger-android-support:$rootProject.dagger"
    kapt "com.google.dagger:dagger-compiler:$rootProject.dagger"
    kapt "com.google.dagger:dagger-android-processor:$rootProject.dagger"

    //Glide
    implementation "com.github.bumptech.glide:glide:$rootProject.glideVersion"
    annotationProcessor "com.github.bumptech.glide:compiler:$rootProject.glideVersion"

    // Fabric and Firebase
    implementation "com.firebaseui:firebase-ui-auth:$rootProject.firebaseUiVersion"
    implementation "com.crashlytics.sdk.android:crashlytics:$crashlyticsVersion"

    // Date and time API for Java.
    implementation "com.jakewharton.threetenabp:threetenabp:$rootProject.threetenabpVersion"
    testImplementation "org.threeten:threetenbp:$rootProject.threetenbpVersion"
    implementation "androidx.core:core-ktx:$rootProject.ktxVersion"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$rootProject.kotlin_version"

    // Instrumentation tests
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$rootProject.espressoVersion"
    androidTestImplementation "androidx.test.ext:junit:$rootProject.testExtVersion"
    androidTestImplementation "androidx.test:runner:$rootProject.runnerVersion"
    androidTestImplementation "androidx.test:rules:$rootProject.rulesVersion"

    // Local unit tests
    testImplementation "junit:junit:$rootProject.junitVersion"
    testImplementation "org.mockito:mockito-core:$rootProject.mockitoVersion"
    testImplementation "com.nhaarman:mockito-kotlin:$rootProject.mockitoKotlinVersion"
    testImplementation "org.hamcrest:hamcrest-library:$rootProject.hamcrestVersion"

    // Solve conflicts with gson. DataBinding is using an old version.
    implementation "com.google.code.gson:gson:$gsonVersion"

    implementation "com.google.ar:core:$rootProject.arcoreVersion"
}
